Dockerfile:
+++++++++++
FROM openjdk:21-jdk-slim
VOLUME /tmp
ENV PORT 8080
EXPOSE 8080
ADD /target/sample-json-serializer-demo-0.0.1-SNAPSHOT.jar sample-json-serializer-demo.jar
ENTRYPOINT ["java", "-Djava.security.egd=file:/dev/./urandom", "-jar","/sample-json-serializer-demo.jar"]

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.gitlab-ci.yml:
==============

image: gitlab/dind#
#image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  SPRING_PROFILES_ACTIVE: gitlab-ci
  USER_GITLAB: dcha22
  #APP_NAME: sample-json-serializer-demo
  #REPO: sample-json-serializer-demotest

stages:
  - build
  - test
  - package

maven-build:
  #image: maven:3-jdk-11
  image: maven:3.8.3-openjdk-17
  stage: build
  script: mvn package -B
  artifacts:
    paths:
      - target/*.jar
      
#maven-test:
 # image: maven:3-jdk-11
  #stage: test
  #script: "mvn test"
 # artifacts:
  #  paths:
  #    - target/*.jar 
  #
docker-build:
  stage: package
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    #- docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/dcha22/sample-json-serializer-demo .
    - docker push registry.gitlab.com/dcha22/sample-json-serializer-demo

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
deployment.yml:
==============

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: spring-test-service
spec:
  selector:
    app: sample-json-serializer-demo
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: LoadBalancer # type of the service. LoadBalancer indicates that our service will be external.
---
##apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-json-serializer-demo
spec:
  #replicas: 2
  selector:
    matchLabels:
      app: sample-json-serializer-demo
  replicas: 1
  template:
    metadata:
      labels:
        app: sample-json-serializer-demo
    spec:
      containers:
      - name: sample-json-serializer-demo
        #image: registry.gitlab.com/dcha22/sample-json-serializer-demo
        image: registry.gitlab.com/javaprojects7254815/sample-json-serializer-demo
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
      imagePullSecrets:
        - name: registry.gitlab.com